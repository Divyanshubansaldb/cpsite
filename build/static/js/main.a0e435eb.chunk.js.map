{"version":3,"sources":["components/navbar.jsx","components/tags.jsx","components/sidebar.jsx","components/prolemcard.jsx","components/multiplecards.jsx","App.js","reportWebVitals.js","index.js"],"names":["navbar","state","className","Component","tags","selectedList","selectedItem","addingtag","removedItem","removingtag","placeholder","this","props","options","title","selectedValues","onSelect","onRemove","displayValue","sidebar","tagName","loading","fetch","then","response","json","data","settingthedata","catch","e","console","log","Difficulty","Concepts","Author","forEach","entry","push","name","setState","str","map","tag","onadd","onremove","matchingnames","singlecard","Card","style","width","Body","Title","problem","code","Subtitle","author","solved","attempted","partiallySolved","Text","multicard","fetchingproblems","method","mode","cache","body","JSON","stringify","taglist","headers","Accept","error","Fragment","length","App","selected","tagvalue","index","indexOf","splice","Width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0e435eb.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass navbar extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-light bg-light\">\r\n        <a className=\"navbar-brand\">{<h1>CPSITE</h1>}</a>\r\n        <button className=\"btn btn-secondary btn-sm\">Login</button>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default navbar;\r\n","// import React, { Component } from \"react\";\r\n// import Checkbox from \"@material-ui/core/Checkbox\";\r\n// import TextField from \"@material-ui/core/TextField\";\r\n// import Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n// import CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\n// import CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\n\r\n// const icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\n// const checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\n// class tags extends Component {\r\n//   render() {\r\n//     return (\r\n//       <div className=\"btn my-3\">\r\n//         <Autocomplete\r\n//           multiple\r\n//           id=\"checkboxes-tags-demo\"\r\n//           options={this.props.title}\r\n//           disableCloseOnSelect\r\n//           getOptionLabel={(option) => option.name}\r\n//           renderOption={(option, { selected }) => (\r\n//             <React.Fragment>\r\n//               <Checkbox\r\n//                 icon={icon}\r\n//                 checkedIcon={checkedIcon}\r\n//                 style={{ marginRight: 8, color: \"blue\" }}\r\n//                 checked={selected}\r\n//               />\r\n//               {option.name}\r\n//             </React.Fragment>\r\n//           )}\r\n//           style={{ width: 300 }}\r\n//           renderInput={(params) => (\r\n//             <TextField\r\n//               {...params}\r\n//               variant=\"outlined\"\r\n//               label={this.props.placeholder}\r\n//               placeholder={this.props.placeholder}\r\n//             />\r\n//           )}\r\n//         />\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n// export default tags;\r\n\r\nimport React, { Component } from \"react\";\r\nimport { Multiselect } from \"multiselect-react-dropdown\";\r\n// import multicard from \"./multiplecards\";\r\n\r\nclass tags extends Component {\r\n  onSelect(selectedList, selectedItem, addingtag) {\r\n    addingtag(selectedItem);\r\n  }\r\n\r\n  onRemove(selectedList, removedItem, removingtag) {\r\n    removingtag(removedItem);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"btn my-3\">\r\n        <Multiselect\r\n          placeholder={this.props.placeholder}\r\n          options={this.props.title} // Options to display in the dropdown\r\n          selectedValues={true} // Preselected value to persist in dropdown\r\n          onSelect={(selectedList, selectedItem) => {\r\n            this.onSelect(selectedList, selectedItem, this.props.addingtag);\r\n          }} // Function will trigger on select event\r\n          onRemove={(selectedList, selectedItem) => {\r\n            this.onRemove(selectedList, selectedItem, this.props.removingtag);\r\n          }} // Function will trigger on remove event\r\n          displayValue=\"name\" // Property name to display in the dropdown options\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default tags;\r\n","import React, { Component } from \"react\";\r\nimport Tags from \"./tags\";\r\nimport style from \"./../styles/sidebar.css\";\r\n\r\nclass sidebar extends Component {\r\n  state = {\r\n    tagName: [\"Difficulty\", \"Concepts\", \"Author\"],\r\n    loading: true,\r\n    options: {},\r\n  };\r\n\r\n  componentDidMount() {\r\n    const url = \"/tags\";\r\n    fetch(url)\r\n      .then((response) => response.json())\r\n      .then((data) => this.settingthedata(data))\r\n      .catch((e) => console.log(e));\r\n  }\r\n\r\n  settingthedata(data) {\r\n    const options = {\r\n      Difficulty: [],\r\n      Concepts: [],\r\n      Author: [],\r\n    };\r\n    data.Author.forEach((entry) => options.Author.push({ name: entry }));\r\n    data.Difficulty.forEach((entry) =>\r\n      options.Difficulty.push({ name: entry })\r\n    );\r\n    data.Concepts.forEach((entry) => options.Concepts.push({ name: entry }));\r\n    this.setState({ options, loading: false });\r\n  }\r\n\r\n  matchingnames(str) {\r\n    if (str === \"Difficulty\") return this.state.options.Difficulty;\r\n    else if (str === \"Concepts\") return this.state.options.Concepts;\r\n    else return this.state.options.Author;\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"fform-control\">\r\n        {this.state.tagName.map((tag) => {\r\n          return (\r\n            <Tags\r\n              key={tag}\r\n              placeholder={tag}\r\n              addingtag={this.props.onadd}\r\n              removingtag={this.props.onremove}\r\n              title={\r\n                this.state.loading\r\n                  ? [{ name: \"loading....\" }]\r\n                  : this.matchingnames(tag)\r\n              }\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default sidebar;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nclass singlecard extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <Card style={{ width: \"18rem\" }}>\r\n        <Card.Body>\r\n          <Card.Title>Problem Code: {this.props.problem.code}</Card.Title>\r\n          <Card.Subtitle className=\"mb-2 text-muted\">\r\n            <h6>Author: {this.props.problem.author}</h6>\r\n            <h6>Solved: {this.props.problem.solved}</h6>\r\n            <h6>Attempted: {this.props.problem.attempted}</h6>\r\n            <h6>PartiallySolved: {this.props.problem.partiallySolved}</h6>\r\n          </Card.Subtitle>\r\n          <Card.Text></Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default singlecard;\r\n","import React, { Component } from \"react\";\r\nimport Customcard from \"./prolemcard\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nclass multicard extends Component {\r\n  state = {\r\n    data: [],\r\n    loading: true,\r\n  };\r\n\r\n  fetchingproblems = () => {\r\n    const url = \"/problems\";\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      cache: \"no-cache\",\r\n      body: JSON.stringify({ taglist: this.props.tags }),\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n        // \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({ data, loading: false });\r\n      })\r\n      .catch((e) => {\r\n        console.error(\"this was an error\");\r\n        console.log(e);\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fetchingproblems();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.fetchingproblems();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.state.loading ? (\r\n          <Card body>Loading....</Card>\r\n        ) : this.state.data.length ? (\r\n          this.state.data.map((problem) => {\r\n            return (\r\n              <div className=\"col-4 my-3 \" key={problem.code}>\r\n                <Customcard problem={problem} />\r\n              </div>\r\n            );\r\n          })\r\n        ) : (\r\n          <Card body>No problem corresponds to these set of tags</Card>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default multicard;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/navbar\";\nimport Sidebar from \"./components/sidebar\";\nimport Multicard from \"./components/multiplecards\";\nimport Card from \"react-bootstrap/Card\";\n\nclass App extends Component {\n  state = {\n    selected: false,\n    tags: [],\n  };\n\n  addingtag = (tagvalue) => {\n    let tags = this.state.tags;\n    tags.push(tagvalue.name);\n    this.setState({ tags, selected: true });\n  };\n\n  removingtag = (tagvalue) => {\n    let tags = this.state.tags;\n    const index = tags.indexOf(tagvalue.name);\n    if (index > -1) {\n      tags.splice(index, 1);\n    }\n    if (tags.length === 0) {\n      this.setState({ tags, selected: false });\n    } else {\n      this.setState({ tags });\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Navbar />\n        <div className=\"container\">\n          <div className=\"outercontainer\">\n            <div className=\"row\">\n              <div className=\"col-3\">\n                <Sidebar onadd={this.addingtag} onremove={this.removingtag} />\n              </div>\n              <div className=\"col-9\">\n                <main>\n                  <div className=\"container\" style={{ Width: \"70%\" }}>\n                    <div className=\"row\">\n                      {this.state.selected ? (\n                        <Multicard tags={this.state.tags} />\n                      ) : (\n                        <Card body>Please Select Any tag</Card>\n                      )}\n                    </div>\n                  </div>\n                </main>\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}